services:
  question-service:
    build: ./question-service
    ports:
      - 8080:8080
    environment:
      - MONGODB_URL=mongodb://mongo:27017/questions
    depends_on:
      - mongo

  mongo:
    image: bitnami/mongodb:latest
    ports:
      - 27017:27017
    volumes:
      - ./mongodb/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongo

  postgres:
    image: postgres:14-alpine
    ports:
      - "5001:5432"
    user: postgres
    environment:
      POSTGRES_PASSWORD: "123"
      POSTGRES_DB: "dev"

  user-service:
    build: ./user-service
    ports:
      - "3000:3000"
    depends_on:
      - postgres

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"   # amqp
      - "15672:15672" # management
    healthcheck:
      test: [ "CMD", "nc", "-z", "localhost", "5672" ]
      interval: 5s
      timeout: 15s
      retries: 1

  matching-service:
    build:
      context: ./matching-service
      dockerfile: Dockerfile.dev
    volumes:
      - ./matching-service:/app
    ports:
      - "8082:8082"
    environment:
      - USER_SERVICE_PORT=3000
      - MATCHING_SERVICE_PORT=8082
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    restart: on-failure
    depends_on:
      - rabbitmq

  front-end:
    build: ./frontend
    ports:
      - "5173:5173"
